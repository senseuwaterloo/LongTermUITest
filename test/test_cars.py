import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities


@pytest.mark.usefixtures("setup_class")
class TestCars:
    
    def test_cars_0bea65aa(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Find a Dealer')]").click()
        self.driver.find_element(By.ID, "location-distance").clear()
        self.driver.find_element(By.ID, "location-distance").select("20 miles")
        self.driver.find_element(By.ID, "zip-input").clear()
        self.driver.find_element(By.ID, "zip-input").send_keys("60606")
        self.driver.find_element(By.ID, "make_select").clear()
        self.driver.find_element(By.ID, "make_select").select("Cadillac")
        self.driver.find_element(By.XPATH, "//form[@id='search_form']/section[2]/div[2]/div[1]/div[1]/div[1]/label[1]").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Highest ratings")
    
    def test_cars_1039245f(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.ID, "by-electric").click()
        self.driver.find_element(By.XPATH, "//div[@id='by-electric-tab']/div[1]/div[1]/div[1]/div[1]/label[1]").click()
        self.driver.find_element(By.ID, "fuel-type-max-price").clear()
        self.driver.find_element(By.ID, "fuel-type-max-price").select("$50,000")
        self.driver.find_element(By.ID, "fuel-type-maximum-distance").clear()
        self.driver.find_element(By.ID, "fuel-type-maximum-distance").select("50 miles")
        self.driver.find_element(By.XPATH, "//div[@id='by-electric-tab']/div[1]/div[4]/div[1]/label[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='by-electric-tab']/div[1]/div[4]/div[1]/label[1]").send_keys("10001")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
    
    def test_cars_135d86d4(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.ID, "make-model-search-stocktype").clear()
        self.driver.find_element(By.ID, "make-model-search-stocktype").select("Used")
        self.driver.find_element(By.ID, "makes").clear()
        self.driver.find_element(By.ID, "makes").select("BMW")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
        self.driver.find_element(By.ID, "price_list_price_min_select").clear()
        self.driver.find_element(By.ID, "price_list_price_min_select").select("$25,000")
        self.driver.find_element(By.ID, "price_list_price_max_select").clear()
        self.driver.find_element(By.ID, "price_list_price_max_select").select("$50,000")
        self.driver.find_element(By.ID, "year_year_min_select").clear()
        self.driver.find_element(By.ID, "year_year_min_select").select("2005")
        self.driver.find_element(By.ID, "year_year_max_select").clear()
        self.driver.find_element(By.ID, "year_year_max_select").select("2015")
        self.driver.find_element(By.ID, "mileage-select").clear()
        self.driver.find_element(By.ID, "mileage-select").select("50,000 or less (291)")
        self.driver.find_element(By.XPATH, "//button[@id='trigger_cylinders']/svg[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='panel_cylinders']/div[3]/label[1]").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Lowest price")
    
    def test_cars_b904b13e(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Listings by City')]").click()
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Madison')]").click()
        self.driver.find_element(By.XPATH, "//button[@id='trigger_body_styles']/svg[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='panel_body_styles']/div[4]/label[1]").click()
        self.driver.find_element(By.XPATH, "//button[@id='trigger_body_styles']/svg[1]").click()
        self.driver.find_element(By.ID, "trigger_interior_colors").click()
        self.driver.find_element(By.XPATH, "//div[@id='panel_interior_colors']/div[6]/label[1]").click()
        self.driver.find_element(By.XPATH, "//button[@id='trigger_body_styles']/svg[1]").click()
        self.driver.find_element(By.XPATH, "//button[@id='trigger_interior_colors']/svg[1]/use[1]").click()
        self.driver.find_element(By.XPATH, "//button[@id='trigger_entertainment_features']/svg[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='panel_entertainment_features']/div[3]/label[1]").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Lowest price")
    
    def test_cars_4f703fa8(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Service & Repair')]").click()
        self.driver.find_element(By.ID, "make-select").clear()
        self.driver.find_element(By.ID, "make-select").select("Audi")
        self.driver.find_element(By.ID, "model-select").clear()
        self.driver.find_element(By.ID, "model-select").select("e-tron")
        self.driver.find_element(By.ID, "year-select").clear()
        self.driver.find_element(By.ID, "year-select").select("2022")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
    
    def test_cars_8404eae6(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Service & Repair')]").click()
        self.driver.find_element(By.ID, "make-select").clear()
        self.driver.find_element(By.ID, "make-select").select("Alfa Romeo")
        self.driver.find_element(By.ID, "model-select").clear()
        self.driver.find_element(By.ID, "model-select").select("4C")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
    
    def test_cars_8bc9b2da(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Research & Reviews')]").click()
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Compare models')]").click()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[make]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[make]']").select("Acura")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[1]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[1]/div[1]/select[1]").select("Acura")
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[model]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[model]']").select("CL")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[2]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[2]/div[1]/select[1]").select("ILX")
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[year]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[year]']").select("2003")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[3]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[3]/div[1]/select[1]").select("2022")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[2]/button[1]").click()
    
    def test_cars_a267dfd8(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Service & Repair')]").click()
        self.driver.find_element(By.ID, "make-select").clear()
        self.driver.find_element(By.ID, "make-select").select("Chevrolet")
        self.driver.find_element(By.ID, "model-select").clear()
        self.driver.find_element(By.ID, "model-select").select("Bolt EUV")
        self.driver.find_element(By.ID, "year-select").clear()
        self.driver.find_element(By.ID, "year-select").select("2022")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
        self.driver.find_element(By.XPATH, "//section[@id='ae-skip-to-content']/div[2]/div[1]/div[1]/section[1]/section[1]/div[2]/div[2]/details[1]/summary[1]/svg[1]/use[1]").click()
    
    def test_cars_a64e6a9d(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Cars for Sale')]").click()
        self.driver.find_element(By.ID, "make-model-search-stocktype").clear()
        self.driver.find_element(By.ID, "make-model-search-stocktype").select("Used")
        self.driver.find_element(By.ID, "make-model-max-price").clear()
        self.driver.find_element(By.ID, "make-model-max-price").select("$4,000")
        self.driver.find_element(By.ID, "makes").clear()
        self.driver.find_element(By.ID, "makes").select("BMW")
        self.driver.find_element(By.ID, "make-model-maximum-distance").clear()
        self.driver.find_element(By.ID, "make-model-maximum-distance").select("30 miles")
        self.driver.find_element(By.ID, "models").clear()
        self.driver.find_element(By.ID, "models").select("128")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
        self.driver.find_element(By.XPATH, "//div[@id='active_filter_tags']/div[1]/label[3]/span[1]/span[1]/span[1]/svg[1]/use[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='active_filter_tags']/div[1]/label[3]/span[1]/span[1]/span[1]/svg[1]/use[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='vehicle-card-8ca688df-4606-4639-844b-6ce25e072d48']/div[1]/div[2]/a[1]").click()
        self.driver.find_element(By.XPATH, "//section[@id='ae-skip-to-content']/div[5]/div[2]/section[4]/section[2]/a[1]/svg[1]").click()
    
    def test_cars_ac41d591(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Car Payment Calculators')]").click()
        self.driver.find_element(By.ID, "price-input").clear()
        self.driver.find_element(By.ID, "price-input").send_keys("15000")
        self.driver.find_element(By.ID, "credit-score-input").clear()
        self.driver.find_element(By.ID, "credit-score-input").select("Average (620 - 699)")
        self.driver.find_element(By.ID, "down-payment-input").clear()
        self.driver.find_element(By.ID, "down-payment-input").send_keys("2000")
        self.driver.find_element(By.XPATH, "//section[@id='ae-skip-to-content']/div[2]/section[1]/section[2]/div[1]/form[1]/div[6]/div[2]/label[1]").click()
        self.driver.find_element(By.ID, "input").clear()
        self.driver.find_element(By.ID, "input").send_keys("65215")
        self.driver.find_element(By.ID, "input").click()
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Shop cars in your budget')]").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Lowest price")
    
    def test_cars_d1fdd62a(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Compare Side by Side')]").click()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[make]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[make]']").select("Audi")
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[model]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[model]']").select("A7")
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[year]']").clear()
        self.driver.find_element(By.XPATH, "//select[@name='vehicle_picker[year]']").select("2023")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[1]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[1]/div[1]/select[1]").select("Audi")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[2]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[2]/div[1]/select[1]").select("A6")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[3]/div[1]/select[1]").clear()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[1]/div[2]/form[1]/div[1]/div[3]/div[1]/select[1]").select("2023")
        self.driver.find_element(By.XPATH, "//div[@id='comparison-landing-hook-container']/spark-page-section[1]/section[2]/div[2]/button[1]").click()
        self.driver.find_element(By.XPATH, "//div[@id='comparison-details-container']/div[1]/spark-page-section[1]/div[1]/label[1]/span[1]").click()
    
    def test_cars_021e02c5(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.ID, "makes").clear()
        self.driver.find_element(By.ID, "makes").select("Dodge")
        self.driver.find_element(By.ID, "models").clear()
        self.driver.find_element(By.ID, "models").select("Ram 1500")
        self.driver.find_element(By.ID, "make-model-maximum-distance").clear()
        self.driver.find_element(By.ID, "make-model-maximum-distance").select("50 miles")
        self.driver.find_element(By.ID, "make-model-zip").click()
        self.driver.find_element(By.ID, "make-model-zip").clear()
        self.driver.find_element(By.ID, "make-model-zip").send_keys("21122")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Lowest price")
    
    def test_cars_094a877b(self):
        # self.driver.get("https://www.cars.com/")
        self.driver.find_element(By.ID, "make-model-search-stocktype").clear()
        self.driver.find_element(By.ID, "make-model-search-stocktype").select("Used")
        self.driver.find_element(By.ID, "makes").clear()
        self.driver.find_element(By.ID, "makes").select("Audi")
        self.driver.find_element(By.ID, "models").clear()
        self.driver.find_element(By.ID, "models").select("100")
        self.driver.find_element(By.XPATH, "//button[@type='submit']").click()
        self.driver.find_element(By.ID, "sort-dropdown").clear()
        self.driver.find_element(By.ID, "sort-dropdown").select("Best deal")
    