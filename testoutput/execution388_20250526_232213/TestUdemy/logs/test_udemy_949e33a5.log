2025-05-26 23:22:27,827 - AutoTestFixer - ERROR - --- Test test_udemy_949e33a5 FAILED ---
2025-05-26 23:22:27,827 - AutoTestFixer - ERROR - URL at failure: https://www.udemy.com/courses/search/?duration=extraShort&q=home+workout&sort=relevance&src=ukw
2025-05-26 23:22:27,828 - AutoTestFixer - ERROR - Traceback:
self = <test.test_udemy.TestUdemy object at 0x105956ef0>

    def test_udemy_949e33a5(self):
        self.driver.get("https://www.udemy.com/")
    
        self.driver.find_element(By.NAME, "q").clear()
        self.driver.find_element(By.NAME, "q").send_keys("home workout")
    
        self.driver.find_element(By.NAME, "q").send_keys(Keys.RETURN)
    
        self.driver.find_element(By.XPATH, "//span[text()='Video Duration']").click()
        self.driver.find_element(By.XPATH, "//label[text()='0-1 Hour']").click()
    
>       self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()

test/test_udemy.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
framework/custom_selenium.py:145: in click
    raise e
framework/custom_selenium.py:120: in click
    self.element.click()
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click
    self._execute(Command.CLICK_ELEMENT)
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute
    return self._parent.execute(command, params)
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x105954bb0>
response = {'status': 400, 'value': '{"value":{"error":"element click intercepted","message":"element click intercepted: Element ...7ff804c18df1 _pthread_start + 99\\n24  libsystem_pthread.dylib             0x00007ff804c14857 thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """Checks that a JSON response from the WebDriver does not have an
        error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get("status", None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get("value", None)
            if value_json and isinstance(value_json, str):
                import json
    
                try:
                    value = json.loads(value_json)
                    if len(value) == 1:
                        value = value["value"]
                    status = value.get("error", None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get("message")
                    else:
                        message = value.get("message", None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        e = ErrorCode()
        error_codes = [item for item in dir(e) if not item.startswith("__")]
        for error_code in error_codes:
            error_info = getattr(ErrorCode, error_code)
            if isinstance(error_info, list) and status in error_info:
                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)
                break
        else:
            exception_class = WebDriverException
    
        if not value:
            value = response["value"]
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and "message" in value:
            message = value["message"]
    
        screen = None  # type: ignore[assignment]
        if "screen" in value:
            screen = value["screen"]
    
        stacktrace = None
        st_value = value.get("stackTrace") or value.get("stacktrace")
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split("\n")
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get("methodName", "<anonymous>")
                        if "className" in frame:
                            meth = f"{frame['className']}.{meth}"
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if "data" in value:
                alert_text = value["data"].get("text")
            elif "alert" in value:
                alert_text = value["alert"].get("text")
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span class="ud-accordion-panel-title">...</span> is not clickable at point (444, 930). Other element would receive the click: <div class="filter-panel--filtered-course-list--m2TA2">...</div>
E         (Session info: chrome=137.0.7151.41)
E       Stacktrace:
E       0   undetected_chromedriver             0x0000000102e00898 undetected_chromedriver + 5986456
E       1   undetected_chromedriver             0x0000000102df79ca undetected_chromedriver + 5949898
E       2   undetected_chromedriver             0x00000001028b0600 undetected_chromedriver + 415232
E       3   undetected_chromedriver             0x00000001029091b0 undetected_chromedriver + 778672
E       4   undetected_chromedriver             0x0000000102907011 undetected_chromedriver + 770065
E       5   undetected_chromedriver             0x00000001029046a2 undetected_chromedriver + 759458
E       6   undetected_chromedriver             0x0000000102903d6e undetected_chromedriver + 757102
E       7   undetected_chromedriver             0x00000001028f642d undetected_chromedriver + 701485
E       8   undetected_chromedriver             0x0000000102928312 undetected_chromedriver + 906002
E       9   undetected_chromedriver             0x00000001028f5da8 undetected_chromedriver + 699816
E       10  undetected_chromedriver             0x00000001029284ce undetected_chromedriver + 906446
E       11  undetected_chromedriver             0x000000010294f566 undetected_chromedriver + 1066342
E       12  undetected_chromedriver             0x00000001029280e3 undetected_chromedriver + 905443
E       13  undetected_chromedriver             0x00000001028f461d undetected_chromedriver + 693789
E       14  undetected_chromedriver             0x00000001028f5281 undetected_chromedriver + 696961
E       15  undetected_chromedriver             0x0000000102dbe560 undetected_chromedriver + 5715296
E       16  undetected_chromedriver             0x0000000102dc2425 undetected_chromedriver + 5731365
E       17  undetected_chromedriver             0x0000000102d98eb0 undetected_chromedriver + 5562032
E       18  undetected_chromedriver             0x0000000102dc2e5b undetected_chromedriver + 5733979
E       19  undetected_chromedriver             0x0000000102d87dc4 undetected_chromedriver + 5492164
E       20  undetected_chromedriver             0x0000000102de5a78 undetected_chromedriver + 5876344
E       21  undetected_chromedriver             0x0000000102de5c40 undetected_chromedriver + 5876800
E       22  undetected_chromedriver             0x0000000102df7591 undetected_chromedriver + 5948817
E       23  libsystem_pthread.dylib             0x00007ff804c18df1 _pthread_start + 99
E       24  libsystem_pthread.dylib             0x00007ff804c14857 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException
2025-05-26 23:22:18,988 - AutoTestFixer - INFO - Attempting to navigate to URL: https://www.udemy.com/
2025-05-26 23:22:20,268 - AutoTestFixer - INFO - Successfully navigated to URL: https://www.udemy.com/
2025-05-26 23:22:22,274 - AutoTestFixer - INFO - Attempting to find element: name = q
2025-05-26 23:22:22,305 - AutoTestFixer - INFO - Successfully find element: name = q
2025-05-26 23:22:22,333 - AutoTestFixer - INFO - Attempting to find element: name = q
2025-05-26 23:22:22,338 - AutoTestFixer - INFO - Successfully find element: name = q
2025-05-26 23:22:22,447 - AutoTestFixer - INFO - Attempting to find element: name = q
2025-05-26 23:22:22,454 - AutoTestFixer - INFO - Successfully find element: name = q
2025-05-26 23:22:23,515 - AutoTestFixer - INFO - Attempting to find element: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,638 - AutoTestFixer - INFO - Successfully find element: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,639 - AutoTestFixer - INFO - Attempting to click element: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,639 - AutoTestFixer - INFO - Attempting to find element: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,644 - AutoTestFixer - INFO - Successfully find element: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,725 - AutoTestFixer - INFO - Element clicked: xpath = //span[text()='Video Duration']
2025-05-26 23:22:24,726 - AutoTestFixer - INFO - Attempting to find element: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,735 - AutoTestFixer - INFO - Successfully find element: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,735 - AutoTestFixer - INFO - Attempting to click element: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,735 - AutoTestFixer - INFO - Attempting to find element: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,739 - AutoTestFixer - INFO - Successfully find element: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,832 - AutoTestFixer - INFO - Element clicked: xpath = //label[text()='0-1 Hour']
2025-05-26 23:22:24,832 - AutoTestFixer - INFO - Attempting to find element: xpath = //span[text()='Topic']
2025-05-26 23:22:24,848 - AutoTestFixer - INFO - Successfully find element: xpath = //span[text()='Topic']
2025-05-26 23:22:24,848 - AutoTestFixer - INFO - Attempting to click element: xpath = //span[text()='Topic']
2025-05-26 23:22:24,848 - AutoTestFixer - INFO - Attempting to find element: xpath = //span[text()='Topic']
2025-05-26 23:22:24,852 - AutoTestFixer - INFO - Successfully find element: xpath = //span[text()='Topic']
2025-05-26 23:22:25,983 - AutoTestFixer - ERROR - ElementClickInterceptedException: Element click intercepted: xpath = //span[text()='Topic'] (Current page URL: https://www.udemy.com/courses/search/?duration=extraShort&q=home+workout&sort=relevance&src=ukw)
2025-05-26 23:22:26,068 - AutoTestFixer - INFO - Test test_udemy_949e33a5 failed. Auto-fix mode: suggest. Initiating process.
2025-05-26 23:22:59,684 - AutoTestFixer - INFO - GPT suggestions:
-------------------------------------------------------
Potential fix (1): Click the parent <button> instead of the nested <span> so Selenium interacts with the real accordion header and avoids interception.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()
Fixed code line/lines:
        self.driver.find_element(By.XPATH, "//button[.//span[text()='Topic']]").click()
-------------------------------------------------------
Potential fix (2): Scroll the “Topic” accordion header into view before clicking to ensure no element is covering it.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()
Fixed code line/lines:
        topic_btn = self.driver.find_element(By.XPATH, "//button[.//span[text()='Topic']]")
        self.driver.execute_script("arguments[0].scrollIntoView({block:'center'});", topic_btn)
        topic_btn.click()
-------------------------------------------------------
Potential fix (3): Use a JavaScript click on the correct <button> to bypass any overlay that may intercept the standard click.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()
Fixed code line/lines:
        topic_btn = self.driver.find_element(By.XPATH, "//button[.//span[text()='Topic']]")
        self.driver.execute_script("arguments[0].click();", topic_btn)
-------------------------------------------------------
Potential fix (4): Wait until the filter sidebar finishes its expand/collapse animation before clicking “Topic” to avoid timing-related interceptions.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()
Fixed code line/lines:
        WebDriverWait(self.driver, 5).until(
            lambda d: d.find_element(By.XPATH, "//button[.//span[text()='Video Duration']]").get_attribute("aria-expanded") == "true"
        )
        self.driver.find_element(By.XPATH, "//button[.//span[text()='Topic']]").click()
-------------------------------------------------------
Potential fix (5): Ensure the Udemy Business banner is scrolled out of view, preventing it from overlaying the sidebar when clicking “Topic”.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//span[text()='Topic']").click()
Fixed code line/lines:
        self.driver.execute_script("window.scrollBy(0, -200);")  # move banner out of the way
        self.driver.find_element(By.XPATH, "//button[.//span[text()='Topic']]").click()
-------------------------------------------------------
2025-05-26 23:22:59,684 - AutoTestFixer - INFO - Auto-fix mode is 'suggest'. Suggestions displayed. No patching or re-run will occur.
