2025-05-26 14:33:09,944 - AutoTestFixer - ERROR - --- Test test_babycenter_6c3bb227 FAILED ---
2025-05-26 14:33:09,944 - AutoTestFixer - ERROR - URL at failure: https://www.babycenter.com/
2025-05-26 14:33:09,944 - AutoTestFixer - ERROR - Traceback:
self = <test.test_babycenter.TestBabycenter object at 0x1042e36a0>

    def test_babycenter_6c3bb227(self):
        self.driver.get("https://www.babycenter.com/")
>       self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()

test/test_babycenter.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
framework/custom_selenium.py:71: in find_element
    raise e
framework/custom_selenium.py:55: in find_element
    element = WebDriverWait(super(), WAIT_TIMEOUT).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="None")>
method = <function presence_of_element_located.<locals>._predicate at 0x104277400>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   undetected_chromedriver             0x00000001026bf898 undetected_chromedriver + 5986456
E       1   undetected_chromedriver             0x00000001026b69ca undetected_chromedriver + 5949898
E       2   undetected_chromedriver             0x000000010216f600 undetected_chromedriver + 415232
E       3   undetected_chromedriver             0x00000001021c1304 undetected_chromedriver + 750340
E       4   undetected_chromedriver             0x00000001021c1521 undetected_chromedriver + 750881
E       5   undetected_chromedriver             0x0000000102211204 undetected_chromedriver + 1077764
E       6   undetected_chromedriver             0x00000001021e733d undetected_chromedriver + 906045
E       7   undetected_chromedriver             0x000000010220e566 undetected_chromedriver + 1066342
E       8   undetected_chromedriver             0x00000001021e70e3 undetected_chromedriver + 905443
E       9   undetected_chromedriver             0x00000001021b361d undetected_chromedriver + 693789
E       10  undetected_chromedriver             0x00000001021b4281 undetected_chromedriver + 696961
E       11  undetected_chromedriver             0x000000010267d560 undetected_chromedriver + 5715296
E       12  undetected_chromedriver             0x0000000102681425 undetected_chromedriver + 5731365
E       13  undetected_chromedriver             0x0000000102657eb0 undetected_chromedriver + 5562032
E       14  undetected_chromedriver             0x0000000102681e5b undetected_chromedriver + 5733979
E       15  undetected_chromedriver             0x0000000102646dc4 undetected_chromedriver + 5492164
E       16  undetected_chromedriver             0x00000001026a4a78 undetected_chromedriver + 5876344
E       17  undetected_chromedriver             0x00000001026a4c40 undetected_chromedriver + 5876800
E       18  undetected_chromedriver             0x00000001026b6591 undetected_chromedriver + 5948817
E       19  libsystem_pthread.dylib             0x00007ff809bbcdf1 _pthread_start + 99
E       20  libsystem_pthread.dylib             0x00007ff809bb8857 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException
2025-05-26 14:32:28,869 - AutoTestFixer - INFO - Attempting to navigate to URL: https://www.babycenter.com/
2025-05-26 14:32:36,519 - AutoTestFixer - INFO - Successfully navigated to URL: https://www.babycenter.com/
2025-05-26 14:32:38,525 - AutoTestFixer - INFO - Attempting to find element: xpath = //a[contains(text(),'Registry Builder')]
2025-05-26 14:33:08,662 - AutoTestFixer - ERROR - TimeoutException: Element not found within 30 seconds: xpath = //a[contains(text(),'Registry Builder')] (Current page URL: https://www.babycenter.com/)
2025-05-26 14:33:08,738 - AutoTestFixer - INFO - Test test_babycenter_6c3bb227 failed. Auto-fix mode: suggest. Initiating process.
2025-05-26 14:33:43,004 - AutoTestFixer - INFO - GPT suggestions:
-------------------------------------------------------
Potential fix (1): Update the locator to match the visible “Registry” link instead of the non-existent “Registry Builder”.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()
Fixed code line/lines:
        self.driver.find_element(By.XPATH, "//a[normalize-space()='Registry']").click()
-------------------------------------------------------
Potential fix (2): Use a robust CSS selector targeting the href that always contains “registry”.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()
Fixed code line/lines:
        self.driver.find_element(By.CSS_SELECTOR, "a[href*='registry']").click()
-------------------------------------------------------
Potential fix (3): Open the hamburger menu first (for small viewports) then click the “Registry” link.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()
Fixed code line/lines:
        # open hamburger menu if collapsed
        self.driver.find_element(By.CSS_SELECTOR, "button.menuIcon").click()
        self.driver.find_element(By.XPATH, "//a[normalize-space()='Registry']").click()
-------------------------------------------------------
Potential fix (4): Scroll the “Registry” link into view before clicking to avoid any off-screen issues.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()
Fixed code line/lines:
        registry_link = self.driver.find_element(By.XPATH, "//a[normalize-space()='Registry']")
        self.driver.execute_script("arguments[0].scrollIntoView(true);", registry_link)
        registry_link.click()
-------------------------------------------------------
Potential fix (5): Click the “Registry” link via JavaScript to bypass any intercepting overlays.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Registry Builder')]").click()
Fixed code line/lines:
        self.driver.execute_script(
            "arguments[0].click()",
            self.driver.find_element(By.XPATH, "//a[normalize-space()='Registry']")
        )
-------------------------------------------------------
2025-05-26 14:33:43,004 - AutoTestFixer - INFO - Auto-fix mode is 'suggest'. Suggestions displayed. No patching or re-run will occur.
