2025-05-26 16:42:38,478 - AutoTestFixer - ERROR - --- Test test_extraspace_8fb3e11e FAILED ---
2025-05-26 16:42:38,478 - AutoTestFixer - ERROR - URL at failure: https://www.extraspace.com/
2025-05-26 16:42:38,478 - AutoTestFixer - ERROR - Traceback:
self = <test.test_extraspace.TestExtraspace object at 0x1041f3b20>

    def test_extraspace_8fb3e11e(self):
        self.driver.get("https://extraspace.com")
    
>       self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()

test/test_extraspace.py:14: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
framework/custom_selenium.py:71: in find_element
    raise e
framework/custom_selenium.py:55: in find_element
    element = WebDriverWait(super(), WAIT_TIMEOUT).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="None")>
method = <function presence_of_element_located.<locals>._predicate at 0x1041a7400>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   undetected_chromedriver             0x0000000103419898 undetected_chromedriver + 5986456
E       1   undetected_chromedriver             0x00000001034109ca undetected_chromedriver + 5949898
E       2   undetected_chromedriver             0x0000000102ec9600 undetected_chromedriver + 415232
E       3   undetected_chromedriver             0x0000000102f1b304 undetected_chromedriver + 750340
E       4   undetected_chromedriver             0x0000000102f1b521 undetected_chromedriver + 750881
E       5   undetected_chromedriver             0x0000000102f6b204 undetected_chromedriver + 1077764
E       6   undetected_chromedriver             0x0000000102f4133d undetected_chromedriver + 906045
E       7   undetected_chromedriver             0x0000000102f68566 undetected_chromedriver + 1066342
E       8   undetected_chromedriver             0x0000000102f410e3 undetected_chromedriver + 905443
E       9   undetected_chromedriver             0x0000000102f0d61d undetected_chromedriver + 693789
E       10  undetected_chromedriver             0x0000000102f0e281 undetected_chromedriver + 696961
E       11  undetected_chromedriver             0x00000001033d7560 undetected_chromedriver + 5715296
E       12  undetected_chromedriver             0x00000001033db425 undetected_chromedriver + 5731365
E       13  undetected_chromedriver             0x00000001033b1eb0 undetected_chromedriver + 5562032
E       14  undetected_chromedriver             0x00000001033dbe5b undetected_chromedriver + 5733979
E       15  undetected_chromedriver             0x00000001033a0dc4 undetected_chromedriver + 5492164
E       16  undetected_chromedriver             0x00000001033fea78 undetected_chromedriver + 5876344
E       17  undetected_chromedriver             0x00000001033fec40 undetected_chromedriver + 5876800
E       18  undetected_chromedriver             0x0000000103410591 undetected_chromedriver + 5948817
E       19  libsystem_pthread.dylib             0x00007ff81b7f0df1 _pthread_start + 99
E       20  libsystem_pthread.dylib             0x00007ff81b7ec857 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException
2025-05-26 16:42:03,204 - AutoTestFixer - INFO - Attempting to navigate to URL: https://extraspace.com
2025-05-26 16:42:05,099 - AutoTestFixer - INFO - Successfully navigated to URL: https://extraspace.com
2025-05-26 16:42:07,105 - AutoTestFixer - INFO - Attempting to find element: xpath = //input[@value='' and @placeholder='Enter Zip, City, or State']
2025-05-26 16:42:37,368 - AutoTestFixer - ERROR - TimeoutException: Element not found within 30 seconds: xpath = //input[@value='' and @placeholder='Enter Zip, City, or State'] (Current page URL: https://www.extraspace.com/)
2025-05-26 16:42:37,442 - AutoTestFixer - INFO - Test test_extraspace_8fb3e11e failed. Auto-fix mode: suggest. Initiating process.
2025-05-26 16:45:34,070 - AutoTestFixer - INFO - GPT suggestions:
-------------------------------------------------------
Potential fix (1): Update placeholder text in XPath to match current site string exactly.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").send_keys("colorado springs")
Fixed code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter City, Zip, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter City, Zip, or State']").send_keys("colorado springs")
-------------------------------------------------------
Potential fix (2): Use a flexible XPath that only checks the meaningful part of the placeholder text.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").send_keys("colorado springs")
Fixed code line/lines:
        search_box = self.driver.find_element(By.XPATH, "//input[contains(@placeholder,'City, Zip')]")
        search_box.clear()
        search_box.send_keys("colorado springs")
-------------------------------------------------------
Potential fix (3): Target the element by its stable id instead of placeholder text.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").send_keys("colorado springs")
Fixed code line/lines:
        search_box = self.driver.find_element(By.ID, "FindStoragePredictiveSearchInputId")
        search_box.clear()
        search_box.send_keys("colorado springs")
-------------------------------------------------------
Potential fix (4): Narrow the search to the header search field to avoid duplicate IDs and improve reliability.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").send_keys("colorado springs")
Fixed code line/lines:
        search_box = self.driver.find_element(By.XPATH, "//header//input[@data-twilio='search-facility-input']")
        search_box.clear()
        search_box.send_keys("colorado springs")
-------------------------------------------------------
Potential fix (5): Use a concise CSS selector that uniquely identifies the input.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").clear()
        self.driver.find_element(By.XPATH, "//input[@value='' and @placeholder='Enter Zip, City, or State']").send_keys("colorado springs")
Fixed code line/lines:
        search_box = self.driver.find_element(By.CSS_SELECTOR, "input.moonshot-input[placeholder*='City, Zip']")
        search_box.clear()
        search_box.send_keys("colorado springs")
-------------------------------------------------------
2025-05-26 16:45:34,070 - AutoTestFixer - INFO - Auto-fix mode is 'suggest'. Suggestions displayed. No patching or re-run will occur.
