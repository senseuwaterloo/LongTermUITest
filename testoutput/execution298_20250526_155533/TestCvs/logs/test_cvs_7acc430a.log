2025-05-26 15:56:13,251 - AutoTestFixer - ERROR - --- Test test_cvs_7acc430a FAILED ---
2025-05-26 15:56:13,251 - AutoTestFixer - ERROR - URL at failure: https://www.cvs.com/
2025-05-26 15:56:13,252 - AutoTestFixer - ERROR - Traceback:
self = <test.test_cvs.TestCvs object at 0x106bcff10>

    def test_cvs_7acc430a(self):
        self.driver.get("https://www.cvs.com/")
    
>       header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop")

test/test_cvs.py:11: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
framework/custom_selenium.py:71: in find_element
    raise e
framework/custom_selenium.py:55: in find_element
    element = WebDriverWait(super(), WAIT_TIMEOUT).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="None")>
method = <function presence_of_element_located.<locals>._predicate at 0x106b83400>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   undetected_chromedriver             0x0000000100b95898 undetected_chromedriver + 5986456
E       1   undetected_chromedriver             0x0000000100b8c9ca undetected_chromedriver + 5949898
E       2   undetected_chromedriver             0x0000000100645600 undetected_chromedriver + 415232
E       3   undetected_chromedriver             0x0000000100697304 undetected_chromedriver + 750340
E       4   undetected_chromedriver             0x0000000100697521 undetected_chromedriver + 750881
E       5   undetected_chromedriver             0x00000001006e7204 undetected_chromedriver + 1077764
E       6   undetected_chromedriver             0x00000001006bd33d undetected_chromedriver + 906045
E       7   undetected_chromedriver             0x00000001006e4566 undetected_chromedriver + 1066342
E       8   undetected_chromedriver             0x00000001006bd0e3 undetected_chromedriver + 905443
E       9   undetected_chromedriver             0x000000010068961d undetected_chromedriver + 693789
E       10  undetected_chromedriver             0x000000010068a281 undetected_chromedriver + 696961
E       11  undetected_chromedriver             0x0000000100b53560 undetected_chromedriver + 5715296
E       12  undetected_chromedriver             0x0000000100b57425 undetected_chromedriver + 5731365
E       13  undetected_chromedriver             0x0000000100b2deb0 undetected_chromedriver + 5562032
E       14  undetected_chromedriver             0x0000000100b57e5b undetected_chromedriver + 5733979
E       15  undetected_chromedriver             0x0000000100b1cdc4 undetected_chromedriver + 5492164
E       16  undetected_chromedriver             0x0000000100b7aa78 undetected_chromedriver + 5876344
E       17  undetected_chromedriver             0x0000000100b7ac40 undetected_chromedriver + 5876800
E       18  undetected_chromedriver             0x0000000100b8c591 undetected_chromedriver + 5948817
E       19  libsystem_pthread.dylib             0x00007ff812eccdf1 _pthread_start + 99
E       20  libsystem_pthread.dylib             0x00007ff812ec8857 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException
2025-05-26 15:55:38,803 - AutoTestFixer - INFO - Attempting to navigate to URL: https://www.cvs.com/
2025-05-26 15:55:39,960 - AutoTestFixer - INFO - Successfully navigated to URL: https://www.cvs.com/
2025-05-26 15:55:41,965 - AutoTestFixer - INFO - Attempting to find element: css selector = body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop
2025-05-26 15:56:12,414 - AutoTestFixer - ERROR - TimeoutException: Element not found within 30 seconds: css selector = body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop (Current page URL: https://www.cvs.com/)
2025-05-26 15:56:12,494 - AutoTestFixer - INFO - Test test_cvs_7acc430a failed. Auto-fix mode: suggest. Initiating process.
2025-05-26 15:56:51,447 - AutoTestFixer - INFO - GPT suggestions:
-------------------------------------------------------
Potential fix (1): Use a shorter, more resilient selector for the header host element to avoid failures caused by DOM-path changes.
Original code line/lines:
        header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop")
Fixed code line/lines:
        header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "cvs-header-desktop")
-------------------------------------------------------
Potential fix (2): Target the header component with a descendant selector that is tolerant of extra wrapper elements.
Original code line/lines:
        header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop")
Fixed code line/lines:
        header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "app-root cvs-header-desktop")
-------------------------------------------------------
Potential fix (3): Ensure a desktop viewport so the `cvs-header-desktop` element is rendered rather than the mobile variant.
Original code line/lines:
        self.driver.get("https://www.cvs.com/")
Fixed code line/lines:
        self.driver.set_window_size(1920, 1080)
        self.driver.get("https://www.cvs.com/")
-------------------------------------------------------
Potential fix (4): Retrieve the header element via JavaScript to bypass issues with shadow-DOM hosts not yet registered when `find_element` runs.
Original code line/lines:
        header_shadow_root = self.driver.find_element(By.CSS_SELECTOR, "body > app-root > app-homepage > cvs-header-component > div > cvs-header > div > cvs-header-desktop")
Fixed code line/lines:
        header_shadow_root = self.driver.execute_script('return document.querySelector("cvs-header-desktop")')
-------------------------------------------------------
Potential fix (5): Fall back to locating the account dropdown directly by its id inside any header variant, skipping the brittle header host lookup.
Original code line/lines:
        sign_in_dropdown = header_shadow_root.shadow_root.find_element(By.CSS_SELECTOR, "#cvs-desktop-header-container > div > div.header-desktop-top-right.sc-cvs-header-desktop > div > cvs-header-acc-dropdown")
Fixed code line/lines:
        sign_in_dropdown = self.driver.find_element(By.CSS_SELECTOR, "cvs-header-acc-dropdown")
-------------------------------------------------------
2025-05-26 15:56:51,447 - AutoTestFixer - INFO - Auto-fix mode is 'suggest'. Suggestions displayed. No patching or re-run will occur.
