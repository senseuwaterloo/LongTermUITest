2025-05-26 16:52:43,179 - AutoTestFixer - ERROR - --- Test test_flightaware_4ffca7c8 FAILED ---
2025-05-26 16:52:43,179 - AutoTestFixer - ERROR - URL at failure: https://www.flightaware.com/
2025-05-26 16:52:43,180 - AutoTestFixer - ERROR - Traceback:
self = <test.test_flightaware.TestFlightaware object at 0x103c17b50>

    def test_flightaware_4ffca7c8(self):
        self.driver.get("https://www.flightaware.com/")
>       self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()

test/test_flightaware.py:9: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
framework/custom_selenium.py:71: in find_element
    raise e
framework/custom_selenium.py:55: in find_element
    element = WebDriverWait(super(), WAIT_TIMEOUT).until(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.support.wait.WebDriverWait (session="None")>
method = <function presence_of_element_located.<locals>._predicate at 0x103bff400>
message = ''

    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = "") -> T:
        """Calls the method provided with the driver as an argument until the \
        return value does not evaluate to ``False``.
    
        :param method: callable(WebDriver)
        :param message: optional message for :exc:`TimeoutException`
        :returns: the result of the last call to `method`
        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs
        """
        screen = None
        stacktrace = None
    
        end_time = time.monotonic() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, "screen", None)
                stacktrace = getattr(exc, "stacktrace", None)
            time.sleep(self._poll)
            if time.monotonic() > end_time:
                break
>       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message: 
E       Stacktrace:
E       0   undetected_chromedriver             0x0000000104802898 undetected_chromedriver + 5986456
E       1   undetected_chromedriver             0x00000001047f99ca undetected_chromedriver + 5949898
E       2   undetected_chromedriver             0x00000001042b2600 undetected_chromedriver + 415232
E       3   undetected_chromedriver             0x0000000104304304 undetected_chromedriver + 750340
E       4   undetected_chromedriver             0x0000000104304521 undetected_chromedriver + 750881
E       5   undetected_chromedriver             0x0000000104354204 undetected_chromedriver + 1077764
E       6   undetected_chromedriver             0x000000010432a33d undetected_chromedriver + 906045
E       7   undetected_chromedriver             0x0000000104351566 undetected_chromedriver + 1066342
E       8   undetected_chromedriver             0x000000010432a0e3 undetected_chromedriver + 905443
E       9   undetected_chromedriver             0x00000001042f661d undetected_chromedriver + 693789
E       10  undetected_chromedriver             0x00000001042f7281 undetected_chromedriver + 696961
E       11  undetected_chromedriver             0x00000001047c0560 undetected_chromedriver + 5715296
E       12  undetected_chromedriver             0x00000001047c4425 undetected_chromedriver + 5731365
E       13  undetected_chromedriver             0x000000010479aeb0 undetected_chromedriver + 5562032
E       14  undetected_chromedriver             0x00000001047c4e5b undetected_chromedriver + 5733979
E       15  undetected_chromedriver             0x0000000104789dc4 undetected_chromedriver + 5492164
E       16  undetected_chromedriver             0x00000001047e7a78 undetected_chromedriver + 5876344
E       17  undetected_chromedriver             0x00000001047e7c40 undetected_chromedriver + 5876800
E       18  undetected_chromedriver             0x00000001047f9591 undetected_chromedriver + 5948817
E       19  libsystem_pthread.dylib             0x00007ff81b7f0df1 _pthread_start + 99
E       20  libsystem_pthread.dylib             0x00007ff81b7ec857 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException
2025-05-26 16:52:04,224 - AutoTestFixer - INFO - Attempting to navigate to URL: https://www.flightaware.com/
2025-05-26 16:52:10,089 - AutoTestFixer - INFO - Successfully navigated to URL: https://www.flightaware.com/
2025-05-26 16:52:12,154 - AutoTestFixer - INFO - Attempting to find element: xpath = //ul[@id='listMenuRoot']/li[2]/a[1]/span[1]
2025-05-26 16:52:42,238 - AutoTestFixer - ERROR - TimeoutException: Element not found within 30 seconds: xpath = //ul[@id='listMenuRoot']/li[2]/a[1]/span[1] (Current page URL: https://www.flightaware.com/)
2025-05-26 16:52:42,311 - AutoTestFixer - INFO - Test test_flightaware_4ffca7c8 failed. Auto-fix mode: suggest. Initiating process.
2025-05-26 16:53:20,776 - AutoTestFixer - INFO - GPT suggestions:
-------------------------------------------------------
Potential fix (1): Update locator to click the visible “Products” summary element instead of the removed listMenuRoot item.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()
Fixed code line/lines:
        self.driver.find_element(By.XPATH, "//summary[normalize-space()='Products']").click()
-------------------------------------------------------
Potential fix (2): Use link-text based locators for both menu clicks (“Products” → “AeroAPI”), eliminating brittle nested-list XPaths.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/div[1]/ul[1]/li[2]/a[1]/span[1]").click()
Fixed code line/lines:
        self.driver.find_element(By.LINK_TEXT, "Products").click()
        self.driver.find_element(By.LINK_TEXT, "AeroAPI").click()
-------------------------------------------------------
Potential fix (3): Skip the now-collapsed menu entirely by navigating straight to the AeroAPI form page.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/div[1]/ul[1]/li[2]/a[1]/span[1]").click()
Fixed code line/lines:
        self.driver.get("https://www.flightaware.com/aeroapi")
-------------------------------------------------------
Potential fix (4): Replace brittle absolute XPath with robust CSS selector for the first menu item.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()
Fixed code line/lines:
        self.driver.find_element(By.CSS_SELECTOR, "summary:hover:text-neutral").click()
-------------------------------------------------------
Potential fix (5): Use an ARIA-label-based XPath to target the “Products” element, improving accessibility alignment.
Original code line/lines:
        self.driver.find_element(By.XPATH, "//ul[@id='listMenuRoot']/li[2]/a[1]/span[1]").click()
Fixed code line/lines:
        self.driver.find_element(By.XPATH, "//summary[@role='button' and normalize-space()='Products']").click()
-------------------------------------------------------

2025-05-26 16:53:20,777 - AutoTestFixer - INFO - Auto-fix mode is 'suggest'. Suggestions displayed. No patching or re-run will occur.
