2024-10-16 20:31:00,239 - ERROR - Test test_boardgamegeek_d2171cc3 failed.
2024-10-16 20:31:00,242 - ERROR - URL at failure: https://boardgamegeek.com/
2024-10-16 20:31:00,242 - ERROR - Exception: self = <test.test_boardgamegeek.TestBoardgamegeek object at 0x102e939a0>

    def test_boardgamegeek_d2171cc3(self):
        # self.driver.get("https://boardgamegeek.com")
        self.driver.find_element(By.XPATH, "//a[contains(text(),'Sign In')]").click()
        self.driver.find_element(By.ID, "inputUsername").click()
        self.driver.find_element(By.ID, "inputUsername").send_keys("UITestStudy")
        self.driver.find_element(By.ID, "inputPassword").click()
        self.driver.find_element(By.ID, "inputPassword").send_keys("UITestStudy2024")
        self.driver.find_element(By.XPATH, "//button[contains(text(),'Sign In')]").click()
        time.sleep(1.5)
        self.driver.find_element(By.XPATH, "//button[contains(.,'GeekLists')]").click()
        # self.driver.find_element(By.XPATH, "//a[contains(text(),'Hot')]").click()
        tmp = self.driver.find_element(By.XPATH, "//a[contains(text(),'Hot')]").get_native_element()
>       tmp.click()

test/test_boardgamegeek.py:22: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:94: in click
    self._execute(Command.CLICK_ELEMENT)
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute
    return self._parent.execute(command, params)
.venv/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x102e91ed0>
response = {'status': 400, 'value': '{"value":{"error":"element not interactable","message":"element not interactable\\n  (Sessio...7ff80fd6018b _pthread_start + 99\\n21  libsystem_pthread.dylib             0x00007ff80fd5bae3 thread_start + 15\\n"}}'}

    def check_response(self, response: Dict[str, Any]) -> None:
        """Checks that a JSON response from the WebDriver does not have an
        error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        """
        status = response.get("status", None)
        if not status or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get("message", "")
        screen: str = response.get("screen", "")
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get("value", None)
            if value_json and isinstance(value_json, str):
                import json
    
                try:
                    value = json.loads(value_json)
                    if len(value) == 1:
                        value = value["value"]
                    status = value.get("error", None)
                    if not status:
                        status = value.get("status", ErrorCode.UNKNOWN_ERROR)
                        message = value.get("value") or value.get("message")
                        if not isinstance(message, str):
                            value = message
                            message = message.get("message")
                    else:
                        message = value.get("message", None)
                except ValueError:
                    pass
    
        exception_class: Type[WebDriverException]
        e = ErrorCode()
        error_codes = [item for item in dir(e) if not item.startswith("__")]
        for error_code in error_codes:
            error_info = getattr(ErrorCode, error_code)
            if isinstance(error_info, list) and status in error_info:
                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)
                break
        else:
            exception_class = WebDriverException
    
        if not value:
            value = response["value"]
        if isinstance(value, str):
            raise exception_class(value)
        if message == "" and "message" in value:
            message = value["message"]
    
        screen = None  # type: ignore[assignment]
        if "screen" in value:
            screen = value["screen"]
    
        stacktrace = None
        st_value = value.get("stackTrace") or value.get("stacktrace")
        if st_value:
            if isinstance(st_value, str):
                stacktrace = st_value.split("\n")
            else:
                stacktrace = []
                try:
                    for frame in st_value:
                        line = frame.get("lineNumber", "")
                        file = frame.get("fileName", "<anonymous>")
                        if line:
                            file = f"{file}:{line}"
                        meth = frame.get("methodName", "<anonymous>")
                        if "className" in frame:
                            meth = f"{frame['className']}.{meth}"
                        msg = "    at %s (%s)"
                        msg = msg % (meth, file)
                        stacktrace.append(msg)
                except TypeError:
                    pass
        if exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if "data" in value:
                alert_text = value["data"].get("text")
            elif "alert" in value:
                alert_text = value["alert"].get("text")
            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here
>       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable
E         (Session info: chrome=130.0.6723.59)
E       Stacktrace:
E       0   undetected_chromedriver             0x00000001033d0a58 undetected_chromedriver + 8141400
E       1   undetected_chromedriver             0x00000001033c894a undetected_chromedriver + 8108362
E       2   undetected_chromedriver             0x0000000102c6ddad undetected_chromedriver + 396717
E       3   undetected_chromedriver             0x0000000102cbb3db undetected_chromedriver + 713691
E       4   undetected_chromedriver             0x0000000102caf318 undetected_chromedriver + 664344
E       5   undetected_chromedriver             0x0000000102cde782 undetected_chromedriver + 857986
E       6   undetected_chromedriver             0x0000000102caed08 undetected_chromedriver + 662792
E       7   undetected_chromedriver             0x0000000102cde93e undetected_chromedriver + 858430
E       8   undetected_chromedriver             0x0000000102cfd0ce undetected_chromedriver + 983246
E       9   undetected_chromedriver             0x0000000102cde523 undetected_chromedriver + 857379
E       10  undetected_chromedriver             0x0000000102cad012 undetected_chromedriver + 655378
E       11  undetected_chromedriver             0x0000000102cadfee undetected_chromedriver + 659438
E       12  undetected_chromedriver             0x00000001033957c0 undetected_chromedriver + 7899072
E       13  undetected_chromedriver             0x0000000103399714 undetected_chromedriver + 7915284
E       14  undetected_chromedriver             0x0000000103377597 undetected_chromedriver + 7775639
E       15  undetected_chromedriver             0x000000010339a19e undetected_chromedriver + 7917982
E       16  undetected_chromedriver             0x0000000103366874 undetected_chromedriver + 7706740
E       17  undetected_chromedriver             0x00000001033b6d98 undetected_chromedriver + 8035736
E       18  undetected_chromedriver             0x00000001033b6f56 undetected_chromedriver + 8036182
E       19  undetected_chromedriver             0x00000001033c8558 undetected_chromedriver + 8107352
E       20  libsystem_pthread.dylib             0x00007ff80fd6018b _pthread_start + 99
E       21  libsystem_pthread.dylib             0x00007ff80fd5bae3 thread_start + 15

.venv/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementNotInteractableException
